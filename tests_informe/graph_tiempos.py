# a bar plot with errorbars
import numpy as np
import matplotlib.pyplot as plt


mean = lambda xs: (sum(xs)/len(xs))
dev = lambda xs: (sum(xs)/len(xs))/mean(xs)


def tiempos_vanilla_ang():
    N = 5


    gauss = [[0.423143, 0.413045, 0.41514, 0.415723, 0.408807, 0.422821, 0.41193, 0.412922, 0.417554, 0.417407, 0.408072, 0.421465, 0.420629, 0.413917, 0.416325, 0.407416, 0.421663, 0.409486, 0.413384, 0.422026],
            [3.31208, 3.30218, 3.30914, 3.31601, 3.32129, 3.309, 3.31187, 3.32019, 3.30695, 3.30369, 3.31548, 3.31474, 3.31806, 3.31621, 3.32905, 3.32413, 3.33924, 3.31582, 3.30079, 3.31326],
            [11.3336, 11.8043, 11.2548, 11.1959, 11.1224, 11.1389, 11.1296, 11.2178, 11.1503, 11.1435, 11.1633, 11.1468, 11.1628, 11.1554, 11.1271, 11.1235, 11.1327, 11.1698, 11.1282, 11.1331],
            [26.3359, 26.3865, 26.3322, 26.2995, 26.3178, 26.3203, 26.3147, 26.3138, 26.3159, 26.3227, 26.3326, 26.3438, 26.3327, 28.0373, 26.4993, 26.4672, 26.3756, 26.4696, 27.2099, 26.8255],
            [50.1488, 50.4188, 53.7412, 52.2473, 51.5845, 51.4866, 52.3695, 51.8566, 51.3005, 51.5339]
            ]



    menMeans = [mean(x) for x in gauss]
    menStd =   [dev(x) for x in gauss]

    ind = np.arange(N)  # the x locations for the groups
    width = 0.35       # the width of the bars

    fig, ax = plt.subplots()
    rects1 = ax.bar(ind, menMeans, width, color='r', yerr=menStd)



    lu = [[0.465802, 0.398425, 0.407891, 0.401184, 0.406328, 0.404916, 0.413006, 0.403493, 0.407657, 0.40088],
            [3.28, 3.21055, 3.20222, 3.20238, 3.2, 3.20412, 3.19849, 3.19968, 3.20802, 3.33305],
            [10.8794, 10.7483, 10.7712, 10.7404, 10.7488, 10.7522, 10.8962, 10.7481, 11.2102, 10.7374],
            [26.7019, 26.4209, 26.811, 27.2365, 25.8735, 25.4555, 25.4623, 25.6918, 25.982, 26.9988],
            [53.3135, 52.2725, 49.68, 49.5812, 49.5951, 49.7736, 49.492, 49.4446, 49.7655, 50.0089]
            ]


    womenMeans = [mean(x) for x in lu]
    womenStd =   [dev(x) for x in lu]

    rects2 = ax.bar(ind+width, womenMeans, width, color='y', yerr=womenStd)

    # add some text for labels, title and axes ticks
    ax.set_ylabel('Tiempo (segundos)')
    ax.set_title('Tiempo por granularidad')
    ax.set_xticks(ind+width)
    ax.set_xlabel('Angulos')
    ax.set_xticklabels( ('10', '20', '30', '40', '50') )
    ax.set_ylim([0, 60])

    ax.legend( (rects1[0], rects2[0]), ('Gauss', 'LU'), loc=2 )

    def autolabel(rects):
        # attach some text labels
        for rect in rects:
            height = rect.get_height()
            ax.text(rect.get_x()+rect.get_width()/2., 1.05*height, '%.1f'%(round(height,2)),
                    ha='center', va='bottom')

    autolabel(rects1)
    autolabel(rects2)

    plt.savefig('tiempos_vanilla_angulos.png')


def tiempos_vanilla_rad():
    N = 5


    gauss = [[0.46971, 0.412104, 0.422985, 0.410727, 0.411893, 0.412246, 0.412571, 0.418829, 0.410948, 0.41658],
            [3.39858, 3.33315, 3.32492, 3.32008, 3.31773, 3.36209, 3.35167, 3.33805, 3.3496, 3.37511],
            [11.3414, 11.2061, 11.1911, 11.3644, 11.133, 11.1364, 11.2405, 11.1461, 11.1349, 11.1249],
            [26.5396, 26.6586, 26.3806, 26.3603, 26.5469, 26.3979, 26.3637, 26.4298, 26.3484, 26.3558],
            [53.2586, 52.0574, 51.8776, 52.2461, 51.9663, 51.7683, 51.4934, 51.5963, 51.5812, 51.3451]
            ]

    menMeans = [mean(x) for x in gauss]
    menStd =   [dev(x) for x in gauss]

    ind = np.arange(N)  # the x locations for the groups
    width = 0.35       # the width of the bars

    fig, ax = plt.subplots()
    rects1 = ax.bar(ind, menMeans, width, color='r', yerr=menStd)



    lu = [[0.468939, 0.401846, 0.400862, 0.397471, 0.405019, 0.402624, 0.403815, 0.399966, 0.41598, 0.404792],
            [3.19591, 3.34, 3.22043, 3.20677, 3.19751, 3.20143, 3.20304, 3.20356, 3.21771, 3.20499],
            [10.7967, 10.8297, 10.7283, 10.7065, 10.7061, 10.7221, 10.7216, 10.717, 10.7113, 10.7138],
            [26.5013, 26.4249, 25.3576, 25.3545, 25.4718, 25.3359, 25.3077, 25.4166, 26.3261, 26.4421],
            [50.3927, 50.7291, 49.3883, 53.1712, 50.0677, 49.4834, 50.0369, 50.4327, 51.6071, 51.3342]
            ]


    womenMeans = [mean(x) for x in lu]
    womenStd =   [dev(x) for x in lu]

    rects2 = ax.bar(ind+width, womenMeans, width, color='y', yerr=womenStd)

    # add some text for labels, title and axes ticks
    ax.set_ylabel('Tiempo (segundos)')
    ax.set_title('Tiempo por granularidad')
    ax.set_xticks(ind+width)
    ax.set_xlabel('Radios')
    ax.set_xticklabels( ('10', '20', '30', '40', '50') )
    ax.set_ylim([0, 60])
    ax.legend( (rects1[0], rects2[0]), ('Gauss', 'LU'), loc=2 )

    def autolabel(rects):
        # attach some text labels
        for rect in rects:
            height = rect.get_height()
            ax.text(rect.get_x()+rect.get_width()/2., 1.05*height, '%.1f'%(round(height,2)),
                    ha='center', va='bottom')

    autolabel(rects1)
    autolabel(rects2)

    plt.savefig('tiempos_vanilla_radios.png')

def tiempos_comp_banda():
    gauss = [26.3527, 26.3812, 26.3695, 26.3687, 26.3064, 26.3104, 26.3344, 26.3079, 26.3798, 25.3389]
    lu = [25.4563, 25.5032, 25.3683, 25.3128, 25.3816, 25.3857, 25.4769, 25.5843, 26.3762, 25.4778]
    gauss_banda = [0.983075, 0.982009, 0.972034, 0.964954, 0.972231, 0.977041, 0.987825, 0.982573, 0.975725, 0.98253]
    lu_banda = [1.04796, 1.03878, 1.0321, 1.04627, 1.03731, 1.03515, 1.03641, 1.0333, 1.04523, 1.04199]

    print mean(gauss),  mean(gauss_banda), mean(lu), mean(lu_banda)



def tiempos_opt_angulos():
    N = 7


    gauss = [[0.082626, 0.063329, 0.062183, 0.061569, 0.063596, 0.062867, 0.064516, 0.062416, 0.062701, 0.062263, 0.062491, 0.061878, 0.062317, 0.061483, 0.062393, 0.061797, 0.062499, 0.062635, 0.080215, 0.063365, 0.071857, 0.061876, 0.062414, 0.06433, 0.062392, 0.062786, 0.063916, 0.062521, 0.063745, 0.061791],
            [0.259013, 0.247629, 0.241632, 0.241889, 0.24055, 0.245605, 0.242287, 0.241772, 0.240755, 0.243898, 0.245595, 0.244732, 0.243134, 0.244593, 0.244849, 0.2431, 0.251441, 0.252428, 0.252269, 0.243551, 0.246977, 0.240971, 0.244855, 0.24163, 0.244332, 0.248102, 0.254447, 0.248484, 0.24972, 0.242481],
            [0.554069, 0.546403, 0.548001, 0.544182, 0.552363, 0.54104, 0.54368, 0.539607, 0.549521, 0.54394, 0.544992, 0.540634, 0.556839, 0.545472, 0.543703, 0.545228, 0.548005, 0.543528, 0.541959, 0.546485, 0.5455, 0.552129, 0.541678, 0.538973, 0.540694, 0.544442, 0.552286, 0.54391, 0.543447, 0.555696],
            [0.968866, 0.973746, 0.969155, 0.99402, 0.963902, 0.99252, 0.985395, 0.966108, 0.993251, 0.959859, 1.01913, 0.966318, 0.970093, 0.971424, 0.962547, 0.971415, 0.96346, 0.970849, 0.966999, 1.00277, 0.982551, 0.975286, 0.990083, 0.991125, 0.976164, 0.996261, 0.966447, 0.973927, 0.969895, 0.974122],
            [1.50481, 1.51556, 1.51978, 1.52948, 1.50915, 1.51969, 1.51039, 1.51522, 1.54327, 1.53986, 1.52326, 1.52032, 1.52015, 1.54001, 1.53096, 1.53424, 1.54462, 1.55892, 1.54038, 1.51744, 1.51746, 1.52242, 1.522, 1.5288, 1.53035, 1.60788, 1.51971, 1.51768, 1.52457, 1.52335],
            [2.16198, 2.17995, 2.1586, 2.1735, 2.16692, 2.16017, 2.15396, 2.14528, 2.14781, 2.1643, 2.15374, 2.16753, 2.15993, 2.16031, 2.1907, 2.1655, 2.15704, 2.2545, 2.16731, 2.1666, 2.18034, 2.15698, 2.17476, 2.16359, 2.16777, 2.17792, 2.17113, 2.16184, 2.16865, 2.18272],
            [2.94768, 2.9475, 2.96729, 2.95929, 2.95114, 2.9798, 3.0015, 2.94303, 2.94815, 2.94985, 2.97996, 2.96256, 2.94404, 2.94839, 2.997, 2.95312, 2.94275, 2.9434, 2.94487, 2.94411, 2.95479, 2.96895, 2.95168, 2.99448, 2.96753, 3.03252, 2.95564, 2.98537, 2.96548, 2.95112]]


    menMeans = [mean(x) for x in gauss]
    menStd =   [dev(x)/5 for x in gauss]

    ind = np.arange(N)  # the x locations for the groups
    width = 0.35       # the width of the bars

    fig, ax = plt.subplots()
    rects1 = ax.bar(ind, menMeans, width, color='r', yerr=menStd)



    lu = [[0.09042, 0.068695, 0.068285, 0.068405, 0.067126, 0.06702, 0.06668, 0.066797, 0.068327, 0.067218, 0.069294, 0.068448, 0.067594, 0.068102, 0.066983, 0.069919, 0.067562, 0.06862, 0.068842, 0.067494, 0.069508, 0.068509, 0.067566, 0.067075, 0.067436, 0.067203, 0.068982, 0.066527, 0.067175, 0.066787],
            [0.312255, 0.265608, 0.261118, 0.264074, 0.344829, 0.260841, 0.261881, 0.262956, 0.265111, 0.263975, 0.261461, 0.261876, 0.260196, 0.263698, 0.263984, 0.261287, 0.276296, 0.263582, 0.263498, 0.265663, 0.262189, 0.261992, 0.261644, 0.266841, 0.266055, 0.265823, 0.267444, 0.259987, 0.262216, 0.261853],
            [0.599151, 0.605919, 0.590297, 0.616298, 0.587893, 0.587654, 0.585621, 0.583972, 0.588658, 0.589016, 0.585818, 0.582914, 0.592884, 0.590007, 0.588904, 0.586277, 0.584466, 0.587474, 0.610084, 0.58343, 0.623791, 0.592604, 0.588236, 0.590847, 0.593417, 0.585945, 0.666726, 0.59126, 0.584116, 0.591905],
            [1.04054, 1.05332, 1.04148, 1.04678, 1.03359, 1.04047, 1.07002, 1.03992, 1.0325, 1.0385, 1.03683, 1.03894, 1.03153, 1.03969, 1.03007, 1.04018, 1.0349, 1.04663, 1.04111, 1.03977, 1.03238, 1.04037, 1.04656, 1.09463, 1.05834, 1.04047, 1.02736, 1.04056, 1.04209, 1.03181],
            [1.60241, 1.61914, 1.62318, 1.62171, 1.61862, 1.61133, 1.62101, 1.62772, 1.61793, 1.62624, 1.61957, 1.6257, 1.65424, 1.87629, 2.09288, 1.79486, 1.90474, 1.8204, 1.85751, 1.85217, 1.75626, 1.69635, 1.61542, 1.61996, 1.68871, 1.62038, 1.61653, 1.61383, 1.61156, 1.6159],
            [2.32875, 2.33448, 2.33834, 2.3536, 2.35401, 2.33772, 2.33732, 2.33869, 2.3283, 2.34056, 2.35177, 2.36145, 2.36403, 2.34538, 2.34213, 2.32198, 2.33723, 2.36607, 2.35083, 2.36057, 2.37806, 2.32199, 2.32604, 2.33957, 2.3308, 2.3305, 2.32281, 2.33011, 2.34131, 2.32877],
            [3.13934, 3.15041, 3.14647, 3.17174, 3.23313, 3.15991, 3.15889, 3.14846, 3.16189, 3.16157, 3.16455, 3.15979, 3.16543, 3.16238, 3.1684, 3.15716, 3.16853, 3.14322, 3.16421, 3.21334, 3.24548, 3.15482, 3.15915, 3.1685, 3.1617, 3.16502, 3.16535, 3.16457, 3.16017, 3.16156]]

    womenMeans = [mean(x) for x in lu]
    womenStd =   [dev(x)/5 for x in lu]

    rects2 = ax.bar(ind+width, womenMeans, width, color='y', yerr=womenStd)

    # add some text for labels, title and axes ticks
    ax.set_ylabel('Tiempo (segundos)')
    ax.set_title('Tiempo por granularidad')
    ax.set_xticks(ind+width)
    ax.set_xlabel('Angulos')
    ax.set_xticklabels( ('10', '20', '30', '40', '50', '60', '70') )
    ax.set_ylim([0, 3.5])
    ax.legend( (rects1[0], rects2[0]), ('Gauss', 'LU'), loc=2 )

    def autolabel(rects):
        # attach some text labels
        for rect in rects:
            height = rect.get_height()
            ax.text(rect.get_x()+rect.get_width()/2., 1.05*height, '%.1f'%(round(height,2)),
                    ha='center', va='bottom')

    autolabel(rects1)
    autolabel(rects2)

    plt.savefig('tiempos_opt_angulos.png')


def tiempos_opt_rad():
    N = 7


    gauss = [[0.04282, 0.030067, 0.025945, 0.030422, 0.022955, 0.02075, 0.017518, 0.017502, 0.017376, 0.017671],
            [0.161068, 0.130273, 0.125355, 0.12797, 0.130058, 0.12502, 0.128204, 0.125772, 0.127913, 0.125754],
            [0.429794, 0.427293, 0.413597, 0.411006, 0.421621, 0.411831, 0.410346, 0.40652, 0.406126, 0.407273],
            [0.970189, 0.976108, 0.963904, 1.01433, 1.05484, 1.04846, 0.967459, 0.973908, 0.962793, 0.973752],
            [1.90436, 1.87193, 1.87456, 1.87167, 1.87104, 1.87236, 1.87194, 1.86924, 1.87237, 1.86917],
            [3.19261, 3.22543, 3.21701, 3.22419, 3.22229, 3.21638, 3.26063, 3.20731, 3.2133, 3.23724, 3.5996, 3.57752, 4.02455, 4.11072, 3.43476, 3.3836, 3.37612, 3.41324, 3.41547, 3.40356, 3.34958, 3.40086, 3.39544, 3.39066, 3.4011, 3.41862, 3.36884, 3.35262, 3.34962, 3.45036],
            [5.27407, 5.15055, 5.1613, 5.16932, 5.16517, 5.15163, 5.15104, 5.22182, 5.28232, 5.21823, 5.77124, 5.20061, 5.20112, 5.15815, 5.14628, 5.16181, 5.22844, 5.13677, 5.16168, 5.15579, 5.28662, 5.22185, 5.15095, 5.15884, 5.15329, 5.27166, 5.25002, 5.16562, 5.27782, 5.31821]
            ]

    menMeans = [mean(x) for x in gauss]
    menStd =   map(lambda x: x/5, [dev(x) for x in gauss])

    ind = np.arange(N)  # the x locations for the groups
    width = 0.35       # the width of the bars

    fig, ax = plt.subplots()
    rects1 = ax.bar(ind, menMeans, width, color='r', yerr=menStd)



    lu = [[0.050656, 0.036171, 0.030137, 0.026103, 0.023351, 0.023363, 0.023262, 0.023117, 0.023343, 0.02347, 0.023559, 0.023242, 0.023886, 0.023304, 0.023095, 0.023229, 0.023412, 0.023511, 0.023382, 0.022826, 0.023199, 0.023253, 0.025181, 0.022388, 0.023194, 0.023245, 0.023358, 0.02309, 0.023195, 0.023144],
            [0.185088, 0.162606, 0.14482, 0.145898, 0.148298, 0.147263, 0.145121, 0.151601, 0.144948, 0.146294, 0.147063, 0.146277, 0.145069, 0.145381, 0.144633, 0.147213, 0.149531, 0.167029, 0.147945, 0.145503, 0.147174, 0.145727, 0.147183, 0.150678, 0.146958, 0.149888, 0.144081, 0.148983, 0.144619, 0.19567],
            [0.491253, 0.453511, 0.458129, 0.454477, 0.460158, 0.454324, 0.456713, 0.457266, 0.454905, 0.449738, 0.456263, 0.45329, 0.475938, 0.458485, 0.459893, 0.458157, 0.452907, 0.452626, 0.459973, 0.452377, 0.450653, 0.452818, 0.462042, 0.453847, 0.459137, 0.455519, 0.459797, 0.459643, 0.465829, 0.462349],
            [1.03969, 1.04575, 1.04398, 1.03763, 1.04479, 1.08793, 1.04876, 1.04221, 1.04221, 1.08284, 1.04059, 1.03632, 1.03886, 1.03537, 1.0382, 1.02908, 1.04336, 1.03102, 1.04492, 1.03379, 1.05221, 1.03499, 1.03748, 1.0395, 1.03091, 1.04389, 1.03285, 1.05192, 1.04575, 1.03647],
            [1.98577, 1.98592, 2.02226, 2.01853, 2.00903, 1.99653, 2.00309, 2.007, 1.9785, 1.97881, 2.08114, 1.98554, 1.97506, 1.97575, 2.01093, 2.0461, 1.98077, 1.98202, 1.98826, 2.00327, 1.98903, 1.98427, 1.98363, 1.98069, 1.99715, 2.00821, 1.99756, 1.97863, 1.98303, 2.08546],
            [3.39722, 3.38993, 3.38876, 3.4349, 3.36592, 3.40243, 3.39299, 3.40953, 3.39917, 3.39989, 3.39182, 3.40113, 3.39289, 3.37992, 3.43411, 3.4023, 3.39888, 3.3952, 3.40549, 3.38407, 3.38186, 3.39301, 3.39705, 3.39889, 3.41705, 3.39699, 3.40604, 3.37963, 3.40044, 3.40515],
            [5.37924, 5.30318, 5.29894, 5.38514, 5.29085, 5.28878, 5.28796, 5.48378, 5.29103, 5.37203, 5.28838, 5.29696, 5.3054, 5.28331, 5.29378, 5.28382, 5.29059, 5.292, 5.28822, 5.32753, 5.4124, 5.28891, 5.28818, 5.29221, 5.28643, 5.29219, 5.32628, 5.37494, 5.37711, 5.28912]

            ]



    womenMeans = [mean(x) for x in lu]
    womenStd =   map(lambda x: x/5, [dev(x) for x in lu])

    rects2 = ax.bar(ind+width, womenMeans, width, color='y', yerr=womenStd)

    # add some text for labels, title and axes ticks
    ax.set_ylabel('Tiempo (segundos)')
    ax.set_title('Tiempo por granularidad')
    ax.set_xticks(ind+width)
    ax.set_xlabel('Radios')
    ax.set_xticklabels( ('10', '20', '30', '40', '50', '60', '70') )
    ax.set_ylim([0, 6])
    ax.legend( (rects1[0], rects2[0]), ('Gauss', 'LU'), loc=2 )

    def autolabel(rects):
        # attach some text labels
        for rect in rects:
            height = rect.get_height()
            ax.text(rect.get_x()+rect.get_width()/2., 1.05*height, '%.1f'%(round(height,2)),
                    ha='center', va='bottom')

    autolabel(rects1)
    autolabel(rects2)

    plt.savefig('tiempos_opt_radios.png')




def tiempos_ninst():
    N = 5


    gauss = [[23.6433, 23.4683, 23.8549, 26.8511, 25.5725, 23.8877, 23.6471, 23.6469, 23.5887, 24.1569],
            [46.6697, 46.6574, 46.6635, 46.6935, 46.6305, 46.6033, 46.7278, 46.6998, 46.6658, 46.6402],
            [70.4321, 70.2211, 69.9862, 69.9064, 69.8872],
            [93.4257, 93.1995, 93.1516],
            [116.793, 117.159, 117.356]
            ]

    menMeans = [mean(x) for x in gauss]
    menStd =   [dev(x) for x in gauss]

    ind = np.arange(N)  # the x locations for the groups
    width = 0.35       # the width of the bars

    fig, ax = plt.subplots()
    rects1 = ax.bar(ind, menMeans, width, color='r', yerr=menStd)



    lu = [[4.712, 4.65268, 4.63577, 4.62432, 4.62893, 4.61498, 4.59513, 4.60429, 4.62331, 4.62118],
            [4.71802, 4.745, 4.82448, 4.72852, 4.67047, 4.64799, 4.65383, 4.83522, 4.67704, 4.67964],
            [4.78136, 4.95405, 5.01935, 4.75907, 4.74782, 4.72576, 4.74566, 4.77264, 4.76687, 4.71336],
            [4.88133, 4.78139, 4.77465, 4.77185, 4.75728, 4.77713, 4.851, 4.90126, 4.83078, 4.79364],
            [4.93369, 5.10057, 4.82528, 4.82364, 4.92174, 4.88245, 4.82801, 4.97207, 4.90773, 4.8651]
            ]



    womenMeans = [mean(x) for x in lu]
    womenStd =   [dev(x) for x in lu]

    rects2 = ax.bar(ind+width, womenMeans, width, color='y', yerr=womenStd)

    # add some text for labels, title and axes ticks
    ax.set_ylabel('Tiempo (segundos)')
    ax.set_title('Tiempo por cantidad de instancias')
    ax.set_xticks(ind+width)
    ax.set_xlabel('Cantidad de instancias')
    ax.set_xticklabels( ('5', '10', '15', '20', '25') )

    ax.legend( (rects1[0], rects2[0]), ('Gauss', 'LU'), loc=2 )

    def autolabel(rects):
        # attach some text labels
        for rect in rects:
            height = rect.get_height()
            ax.text(rect.get_x()+rect.get_width()/2., 1.05*height, '%.1f'%(round(height,2)),
                    ha='center', va='bottom')

    autolabel(rects1)
    autolabel(rects2)

    plt.savefig('tiempos_ninst.png')















tiempos_vanilla_ang()
tiempos_vanilla_rad()
tiempos_comp_banda()
tiempos_opt_rad()
tiempos_opt_angulos()
tiempos_ninst()
